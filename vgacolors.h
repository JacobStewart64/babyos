#include "safeint.h"

/* Hardware text mode color constants.
 * They all follow the color on color
 * rule. Easy to choose your color
 * if you learn the 16 colors.
 * fg first, bg second.
 * use the VGACOLOR enum to index into
 * the VGACOLORARRs
 * or iterate over the colors with the functions
 */
enum VGACOLOR {
        BB,
        BDG,
        DGB,
        DGDG,
        BBL,
        BLB,
        DGBL,
        DGLB,
        BG,
        BLGR,
        DGG,
        DGLGR,
        BC,
        BLC,
        DGC,
        DGLC,
        BR,
        BLR,
        DGR,
        DGLR,
        BM,
        BLM,
        DGM,
        DGLM,
        BBR,
        BY,
        DGBR,
        DGY,
        BLG,
        BW,
        DGLG,
        DGW,
        BLB,
        BLDG,
        LBB,
        LBDG,
        BLBL,
        BLLB,
        LBBL,
        LBLB,
        BLG,
        BLLGR,
        LBG,
        LBLGR,
        BLC,
        BLLC,
        LBC,
        LBLC,
        BLR,
        BLLR,
        LBR,
        LBLR,
        BLM,
        BLLM,
        LBM,
        LBLM,
        BLBR,
        BLY,
        LBBR,
        LBY,
        BLLG,
        BLW,
        LBLG,
        LBW,
        GB,
        GDG,
        LGRB,
        LGRDG,
        GBL,
        GLB,
        LGRBL,
        LGRLB,
        GG,
        GLGR,
        LGRG,
        LGRLGR,
        GC,
        GLC,
        LGRC,
        LGRLC,
        GR,
        GLR,
        LGRR,
        LGRLR,
        GM,
        GLM,
        LGRM,
        LGRLM,
        GBR,
        GY,
        LGRBR,
        LGRY,
        GLG,
        GW,
        LGRLG,
        LGRW,
        CB,
        CDG,
        LCB,
        LCDG,
        CBL,
        CLB,
        LCBL,
        LCLB,
        CG,
        CLGR,
        LCG,
        LCLGR,
        CC,
        CLC,
        LCC,
        LCLC,
        CR,
        CLR,
        LCR,
        LCLR,
        CM,
        CLM,
        LCM,
        LCLM,
        CBR,
        CY,
        LCBR,
        LCY,
        CLG,
        CW,
        LCLG,
        LCW,
        RB,
        RDG,
        LRB,
        LRDG,
        RBL,
        RLB,
        LRBL,
        LRLB,
        RG,
        RLGR,
        LRG,
        LRLGR,
        RC,
        RLC,
        LRC,
        LRLC,
        RR,
        RLR,
        LRR,
        LRLR,
        RM,
        RLM,
        LRM,
        LRLM,
        RBR,
        RY,
        LRBR,
        LRY,
        RLG,
        RW,
        LRLG,
        LRW,
        MB,
        MDG,
        LMB,
        LMDG,
        MBL,
        MLB,
        LMBL,
        LMLB,
        MG,
        MLGR,
        LMG,
        LMLGR,
        MC,
        MLC,
        LMC,
        LMLC,
        MR,
        MLR,
        LMR,
        LMLR,
        MM,
        MLM,
        LMM,
        LMLM,
        MBR,
        MY,
        LMBR,
        LMY,
        MLG,
        MW,
        LMLG,
        LMW,
        BRB,
        BRDG,
        YB,
        YDG,
        BRBL,
        BRLB,
        YBL,
        YLB,
        BRG,
        BRLGR,
        YG,
        YLGR,
        BRC,
        BRLC,
        YC,
        YLC,
        BRR,
        BRLR,
        YR,
        YLR,
        BRM,
        BRLM,
        YM,
        YLM,
        BRBR,
        BRY,
        YBR,
        YY,
        BRLG,
        BRW,
        YLG,
        YW,
        LGB,
        LGDG,
        WB,
        WDG,
        LGBL,
        LGLB,
        WBL,
        WLB,
        LGG,
        LGLGR,
        WG,
        WLGR,
        LGC,
        LGLC,
        WC,
        WLC,
        LGR,
        LGLR,
        WR,
        WLR,
        LGM,
        LGLM,
        WM,
        WLM,
        LGBR,
        LGY,
        WBR,
        WY,
        LGLG,
        LGW,
        WLG,
        WW,
};
const uint32 VGACOLORLEN = 256;
uint8 VGACOLORARR[VGACOLORLEN]  = {
        (((0x0|0x8) << 4) + 0x0|0x8) << 8,
        (((0x0|0x8) << 4) + 0x0) << 8,
        ((0x0 << 4) + (0x0|0x8)) << 8,
        ((0x0 << 4) + 0x0) << 8,
        (((0x0|0x8) << 4) + 0x1|0x8) << 8,
        (((0x0|0x8) << 4) + 0x1) << 8,
        ((0x0 << 4) + (0x1|0x8)) << 8,
        ((0x0 << 4) + 0x1) << 8,
        (((0x0|0x8) << 4) + 0x2|0x8) << 8,
        (((0x0|0x8) << 4) + 0x2) << 8,
        ((0x0 << 4) + (0x2|0x8)) << 8,
        ((0x0 << 4) + 0x2) << 8,
        (((0x0|0x8) << 4) + 0x3|0x8) << 8,
        (((0x0|0x8) << 4) + 0x3) << 8,
        ((0x0 << 4) + (0x3|0x8)) << 8,
        ((0x0 << 4) + 0x3) << 8,
        (((0x0|0x8) << 4) + 0x4|0x8) << 8,
        (((0x0|0x8) << 4) + 0x4) << 8,
        ((0x0 << 4) + (0x4|0x8)) << 8,
        ((0x0 << 4) + 0x4) << 8,
        (((0x0|0x8) << 4) + 0x5|0x8) << 8,
        (((0x0|0x8) << 4) + 0x5) << 8,
        ((0x0 << 4) + (0x5|0x8)) << 8,
        ((0x0 << 4) + 0x5) << 8,
        (((0x0|0x8) << 4) + 0x6|0x8) << 8,
        (((0x0|0x8) << 4) + 0x6) << 8,
        ((0x0 << 4) + (0x6|0x8)) << 8,
        ((0x0 << 4) + 0x6) << 8,
        (((0x0|0x8) << 4) + 0x7|0x8) << 8,
        (((0x0|0x8) << 4) + 0x7) << 8,
        ((0x0 << 4) + (0x7|0x8)) << 8,
        ((0x0 << 4) + 0x7) << 8,
        (((0x1|0x8) << 4) + 0x0|0x8) << 8,
        (((0x1|0x8) << 4) + 0x0) << 8,
        ((0x1 << 4) + (0x0|0x8)) << 8,
        ((0x1 << 4) + 0x0) << 8,
        (((0x1|0x8) << 4) + 0x1|0x8) << 8,
        (((0x1|0x8) << 4) + 0x1) << 8,
        ((0x1 << 4) + (0x1|0x8)) << 8,
        ((0x1 << 4) + 0x1) << 8,
        (((0x1|0x8) << 4) + 0x2|0x8) << 8,
        (((0x1|0x8) << 4) + 0x2) << 8,
        ((0x1 << 4) + (0x2|0x8)) << 8,
        ((0x1 << 4) + 0x2) << 8,
        (((0x1|0x8) << 4) + 0x3|0x8) << 8,
        (((0x1|0x8) << 4) + 0x3) << 8,
        ((0x1 << 4) + (0x3|0x8)) << 8,
        ((0x1 << 4) + 0x3) << 8,
        (((0x1|0x8) << 4) + 0x4|0x8) << 8,
        (((0x1|0x8) << 4) + 0x4) << 8,
        ((0x1 << 4) + (0x4|0x8)) << 8,
        ((0x1 << 4) + 0x4) << 8,
        (((0x1|0x8) << 4) + 0x5|0x8) << 8,
        (((0x1|0x8) << 4) + 0x5) << 8,
        ((0x1 << 4) + (0x5|0x8)) << 8,
        ((0x1 << 4) + 0x5) << 8,
        (((0x1|0x8) << 4) + 0x6|0x8) << 8,
        (((0x1|0x8) << 4) + 0x6) << 8,
        ((0x1 << 4) + (0x6|0x8)) << 8,
        ((0x1 << 4) + 0x6) << 8,
        (((0x1|0x8) << 4) + 0x7|0x8) << 8,
        (((0x1|0x8) << 4) + 0x7) << 8,
        ((0x1 << 4) + (0x7|0x8)) << 8,
        ((0x1 << 4) + 0x7) << 8,
        (((0x2|0x8) << 4) + 0x0|0x8) << 8,
        (((0x2|0x8) << 4) + 0x0) << 8,
        ((0x2 << 4) + (0x0|0x8)) << 8,
        ((0x2 << 4) + 0x0) << 8,
        (((0x2|0x8) << 4) + 0x1|0x8) << 8,
        (((0x2|0x8) << 4) + 0x1) << 8,
        ((0x2 << 4) + (0x1|0x8)) << 8,
        ((0x2 << 4) + 0x1) << 8,
        (((0x2|0x8) << 4) + 0x2|0x8) << 8,
        (((0x2|0x8) << 4) + 0x2) << 8,
        ((0x2 << 4) + (0x2|0x8)) << 8,
        ((0x2 << 4) + 0x2) << 8,
        (((0x2|0x8) << 4) + 0x3|0x8) << 8,
        (((0x2|0x8) << 4) + 0x3) << 8,
        ((0x2 << 4) + (0x3|0x8)) << 8,
        ((0x2 << 4) + 0x3) << 8,
        (((0x2|0x8) << 4) + 0x4|0x8) << 8,
        (((0x2|0x8) << 4) + 0x4) << 8,
        ((0x2 << 4) + (0x4|0x8)) << 8,
        ((0x2 << 4) + 0x4) << 8,
        (((0x2|0x8) << 4) + 0x5|0x8) << 8,
        (((0x2|0x8) << 4) + 0x5) << 8,
        ((0x2 << 4) + (0x5|0x8)) << 8,
        ((0x2 << 4) + 0x5) << 8,
        (((0x2|0x8) << 4) + 0x6|0x8) << 8,
        (((0x2|0x8) << 4) + 0x6) << 8,
        ((0x2 << 4) + (0x6|0x8)) << 8,
        ((0x2 << 4) + 0x6) << 8,
        (((0x2|0x8) << 4) + 0x7|0x8) << 8,
        (((0x2|0x8) << 4) + 0x7) << 8,
        ((0x2 << 4) + (0x7|0x8)) << 8,
        ((0x2 << 4) + 0x7) << 8,
        (((0x3|0x8) << 4) + 0x0|0x8) << 8,
        (((0x3|0x8) << 4) + 0x0) << 8,
        ((0x3 << 4) + (0x0|0x8)) << 8,
        ((0x3 << 4) + 0x0) << 8,
        (((0x3|0x8) << 4) + 0x1|0x8) << 8,
        (((0x3|0x8) << 4) + 0x1) << 8,
        ((0x3 << 4) + (0x1|0x8)) << 8,
        ((0x3 << 4) + 0x1) << 8,
        (((0x3|0x8) << 4) + 0x2|0x8) << 8,
        (((0x3|0x8) << 4) + 0x2) << 8,
        ((0x3 << 4) + (0x2|0x8)) << 8,
        ((0x3 << 4) + 0x2) << 8,
        (((0x3|0x8) << 4) + 0x3|0x8) << 8,
        (((0x3|0x8) << 4) + 0x3) << 8,
        ((0x3 << 4) + (0x3|0x8)) << 8,
        ((0x3 << 4) + 0x3) << 8,
        (((0x3|0x8) << 4) + 0x4|0x8) << 8,
        (((0x3|0x8) << 4) + 0x4) << 8,
        ((0x3 << 4) + (0x4|0x8)) << 8,
        ((0x3 << 4) + 0x4) << 8,
        (((0x3|0x8) << 4) + 0x5|0x8) << 8,
        (((0x3|0x8) << 4) + 0x5) << 8,
        ((0x3 << 4) + (0x5|0x8)) << 8,
        ((0x3 << 4) + 0x5) << 8,
        (((0x3|0x8) << 4) + 0x6|0x8) << 8,
        (((0x3|0x8) << 4) + 0x6) << 8,
        ((0x3 << 4) + (0x6|0x8)) << 8,
        ((0x3 << 4) + 0x6) << 8,
        (((0x3|0x8) << 4) + 0x7|0x8) << 8,
        (((0x3|0x8) << 4) + 0x7) << 8,
        ((0x3 << 4) + (0x7|0x8)) << 8,
        ((0x3 << 4) + 0x7) << 8,
        (((0x4|0x8) << 4) + 0x0|0x8) << 8,
        (((0x4|0x8) << 4) + 0x0) << 8,
        ((0x4 << 4) + (0x0|0x8)) << 8,
        ((0x4 << 4) + 0x0) << 8,
        (((0x4|0x8) << 4) + 0x1|0x8) << 8,
        (((0x4|0x8) << 4) + 0x1) << 8,
        ((0x4 << 4) + (0x1|0x8)) << 8,
        ((0x4 << 4) + 0x1) << 8,
        (((0x4|0x8) << 4) + 0x2|0x8) << 8,
        (((0x4|0x8) << 4) + 0x2) << 8,
        ((0x4 << 4) + (0x2|0x8)) << 8,
        ((0x4 << 4) + 0x2) << 8,
        (((0x4|0x8) << 4) + 0x3|0x8) << 8,
        (((0x4|0x8) << 4) + 0x3) << 8,
        ((0x4 << 4) + (0x3|0x8)) << 8,
        ((0x4 << 4) + 0x3) << 8,
        (((0x4|0x8) << 4) + 0x4|0x8) << 8,
        (((0x4|0x8) << 4) + 0x4) << 8,
        ((0x4 << 4) + (0x4|0x8)) << 8,
        ((0x4 << 4) + 0x4) << 8,
        (((0x4|0x8) << 4) + 0x5|0x8) << 8,
        (((0x4|0x8) << 4) + 0x5) << 8,
        ((0x4 << 4) + (0x5|0x8)) << 8,
        ((0x4 << 4) + 0x5) << 8,
        (((0x4|0x8) << 4) + 0x6|0x8) << 8,
        (((0x4|0x8) << 4) + 0x6) << 8,
        ((0x4 << 4) + (0x6|0x8)) << 8,
        ((0x4 << 4) + 0x6) << 8,
        (((0x4|0x8) << 4) + 0x7|0x8) << 8,
        (((0x4|0x8) << 4) + 0x7) << 8,
        ((0x4 << 4) + (0x7|0x8)) << 8,
        ((0x4 << 4) + 0x7) << 8,
        (((0x5|0x8) << 4) + 0x0|0x8) << 8,
        (((0x5|0x8) << 4) + 0x0) << 8,
        ((0x5 << 4) + (0x0|0x8)) << 8,
        ((0x5 << 4) + 0x0) << 8,
        (((0x5|0x8) << 4) + 0x1|0x8) << 8,
        (((0x5|0x8) << 4) + 0x1) << 8,
        ((0x5 << 4) + (0x1|0x8)) << 8,
        ((0x5 << 4) + 0x1) << 8,
        (((0x5|0x8) << 4) + 0x2|0x8) << 8,
        (((0x5|0x8) << 4) + 0x2) << 8,
        ((0x5 << 4) + (0x2|0x8)) << 8,
        ((0x5 << 4) + 0x2) << 8,
        (((0x5|0x8) << 4) + 0x3|0x8) << 8,
        (((0x5|0x8) << 4) + 0x3) << 8,
        ((0x5 << 4) + (0x3|0x8)) << 8,
        ((0x5 << 4) + 0x3) << 8,
        (((0x5|0x8) << 4) + 0x4|0x8) << 8,
        (((0x5|0x8) << 4) + 0x4) << 8,
        ((0x5 << 4) + (0x4|0x8)) << 8,
        ((0x5 << 4) + 0x4) << 8,
        (((0x5|0x8) << 4) + 0x5|0x8) << 8,
        (((0x5|0x8) << 4) + 0x5) << 8,
        ((0x5 << 4) + (0x5|0x8)) << 8,
        ((0x5 << 4) + 0x5) << 8,
        (((0x5|0x8) << 4) + 0x6|0x8) << 8,
        (((0x5|0x8) << 4) + 0x6) << 8,
        ((0x5 << 4) + (0x6|0x8)) << 8,
        ((0x5 << 4) + 0x6) << 8,
        (((0x5|0x8) << 4) + 0x7|0x8) << 8,
        (((0x5|0x8) << 4) + 0x7) << 8,
        ((0x5 << 4) + (0x7|0x8)) << 8,
        ((0x5 << 4) + 0x7) << 8,
        (((0x6|0x8) << 4) + 0x0|0x8) << 8,
        (((0x6|0x8) << 4) + 0x0) << 8,
        ((0x6 << 4) + (0x0|0x8)) << 8,
        ((0x6 << 4) + 0x0) << 8,
        (((0x6|0x8) << 4) + 0x1|0x8) << 8,
        (((0x6|0x8) << 4) + 0x1) << 8,
        ((0x6 << 4) + (0x1|0x8)) << 8,
        ((0x6 << 4) + 0x1) << 8,
        (((0x6|0x8) << 4) + 0x2|0x8) << 8,
        (((0x6|0x8) << 4) + 0x2) << 8,
        ((0x6 << 4) + (0x2|0x8)) << 8,
        ((0x6 << 4) + 0x2) << 8,
        (((0x6|0x8) << 4) + 0x3|0x8) << 8,
        (((0x6|0x8) << 4) + 0x3) << 8,
        ((0x6 << 4) + (0x3|0x8)) << 8,
        ((0x6 << 4) + 0x3) << 8,
        (((0x6|0x8) << 4) + 0x4|0x8) << 8,
        (((0x6|0x8) << 4) + 0x4) << 8,
        ((0x6 << 4) + (0x4|0x8)) << 8,
        ((0x6 << 4) + 0x4) << 8,
        (((0x6|0x8) << 4) + 0x5|0x8) << 8,
        (((0x6|0x8) << 4) + 0x5) << 8,
        ((0x6 << 4) + (0x5|0x8)) << 8,
        ((0x6 << 4) + 0x5) << 8,
        (((0x6|0x8) << 4) + 0x6|0x8) << 8,
        (((0x6|0x8) << 4) + 0x6) << 8,
        ((0x6 << 4) + (0x6|0x8)) << 8,
        ((0x6 << 4) + 0x6) << 8,
        (((0x6|0x8) << 4) + 0x7|0x8) << 8,
        (((0x6|0x8) << 4) + 0x7) << 8,
        ((0x6 << 4) + (0x7|0x8)) << 8,
        ((0x6 << 4) + 0x7) << 8,
        (((0x7|0x8) << 4) + 0x0|0x8) << 8,
        (((0x7|0x8) << 4) + 0x0) << 8,
        ((0x7 << 4) + (0x0|0x8)) << 8,
        ((0x7 << 4) + 0x0) << 8,
        (((0x7|0x8) << 4) + 0x1|0x8) << 8,
        (((0x7|0x8) << 4) + 0x1) << 8,
        ((0x7 << 4) + (0x1|0x8)) << 8,
        ((0x7 << 4) + 0x1) << 8,
        (((0x7|0x8) << 4) + 0x2|0x8) << 8,
        (((0x7|0x8) << 4) + 0x2) << 8,
        ((0x7 << 4) + (0x2|0x8)) << 8,
        ((0x7 << 4) + 0x2) << 8,
        (((0x7|0x8) << 4) + 0x3|0x8) << 8,
        (((0x7|0x8) << 4) + 0x3) << 8,
        ((0x7 << 4) + (0x3|0x8)) << 8,
        ((0x7 << 4) + 0x3) << 8,
        (((0x7|0x8) << 4) + 0x4|0x8) << 8,
        (((0x7|0x8) << 4) + 0x4) << 8,
        ((0x7 << 4) + (0x4|0x8)) << 8,
        ((0x7 << 4) + 0x4) << 8,
        (((0x7|0x8) << 4) + 0x5|0x8) << 8,
        (((0x7|0x8) << 4) + 0x5) << 8,
        ((0x7 << 4) + (0x5|0x8)) << 8,
        ((0x7 << 4) + 0x5) << 8,
        (((0x7|0x8) << 4) + 0x6|0x8) << 8,
        (((0x7|0x8) << 4) + 0x6) << 8,
        ((0x7 << 4) + (0x6|0x8)) << 8,
        ((0x7 << 4) + 0x6) << 8,
        (((0x7|0x8) << 4) + 0x7|0x8) << 8,
        (((0x7|0x8) << 4) + 0x7) << 8,
        ((0x7 << 4) + (0x7|0x8)) << 8,
        ((0x7 << 4) + 0x7) << 8,
};
uint8* VGACOLORSTRARR[VGACOLORLEN]  = {
        "BB",
        "BDG",
        "DGB",
        "DGDG",
        "BBL",
        "BLB",
        "DGBL",
        "DGLB",
        "BG",
        "BLGR",
        "DGG",
        "DGLGR",
        "BC",
        "BLC",
        "DGC",
        "DGLC",
        "BR",
        "BLR",
        "DGR",
        "DGLR",
        "BM",
        "BLM",
        "DGM",
        "DGLM",
        "BBR",
        "BY",
        "DGBR",
        "DGY",
        "BLG",
        "BW",
        "DGLG",
        "DGW",
        "BLB",
        "BLDG",
        "LBB",
        "LBDG",
        "BLBL",
        "BLLB",
        "LBBL",
        "LBLB",
        "BLG",
        "BLLGR",
        "LBG",
        "LBLGR",
        "BLC",
        "BLLC",
        "LBC",
        "LBLC",
        "BLR",
        "BLLR",
        "LBR",
        "LBLR",
        "BLM",
        "BLLM",
        "LBM",
        "LBLM",
        "BLBR",
        "BLY",
        "LBBR",
        "LBY",
        "BLLG",
        "BLW",
        "LBLG",
        "LBW",
        "GB",
        "GDG",
        "LGRB",
        "LGRDG",
        "GBL",
        "GLB",
        "LGRBL",
        "LGRLB",
        "GG",
        "GLGR",
        "LGRG",
        "LGRLGR",
        "GC",
        "GLC",
        "LGRC",
        "LGRLC",
        "GR",
        "GLR",
        "LGRR",
        "LGRLR",
        "GM",
        "GLM",
        "LGRM",
        "LGRLM",
        "GBR",
        "GY",
        "LGRBR",
        "LGRY",
        "GLG",
        "GW",
        "LGRLG",
        "LGRW",
        "CB",
        "CDG",
        "LCB",
        "LCDG",
        "CBL",
        "CLB",
        "LCBL",
        "LCLB",
        "CG",
        "CLGR",
        "LCG",
        "LCLGR",
        "CC",
        "CLC",
        "LCC",
        "LCLC",
        "CR",
        "CLR",
        "LCR",
        "LCLR",
        "CM",
        "CLM",
        "LCM",
        "LCLM",
        "CBR",
        "CY",
        "LCBR",
        "LCY",
        "CLG",
        "CW",
        "LCLG",
        "LCW",
        "RB",
        "RDG",
        "LRB",
        "LRDG",
        "RBL",
        "RLB",
        "LRBL",
        "LRLB",
        "RG",
        "RLGR",
        "LRG",
        "LRLGR",
        "RC",
        "RLC",
        "LRC",
        "LRLC",
        "RR",
        "RLR",
        "LRR",
        "LRLR",
        "RM",
        "RLM",
        "LRM",
        "LRLM",
        "RBR",
        "RY",
        "LRBR",
        "LRY",
        "RLG",
        "RW",
        "LRLG",
        "LRW",
        "MB",
        "MDG",
        "LMB",
        "LMDG",
        "MBL",
        "MLB",
        "LMBL",
        "LMLB",
        "MG",
        "MLGR",
        "LMG",
        "LMLGR",
        "MC",
        "MLC",
        "LMC",
        "LMLC",
        "MR",
        "MLR",
        "LMR",
        "LMLR",
        "MM",
        "MLM",
        "LMM",
        "LMLM",
        "MBR",
        "MY",
        "LMBR",
        "LMY",
        "MLG",
        "MW",
        "LMLG",
        "LMW",
        "BRB",
        "BRDG",
        "YB",
        "YDG",
        "BRBL",
        "BRLB",
        "YBL",
        "YLB",
        "BRG",
        "BRLGR",
        "YG",
        "YLGR",
        "BRC",
        "BRLC",
        "YC",
        "YLC",
        "BRR",
        "BRLR",
        "YR",
        "YLR",
        "BRM",
        "BRLM",
        "YM",
        "YLM",
        "BRBR",
        "BRY",
        "YBR",
        "YY",
        "BRLG",
        "BRW",
        "YLG",
        "YW",
        "LGB",
        "LGDG",
        "WB",
        "WDG",
        "LGBL",
        "LGLB",
        "WBL",
        "WLB",
        "LGG",
        "LGLGR",
        "WG",
        "WLGR",
        "LGC",
        "LGLC",
        "WC",
        "WLC",
        "LGR",
        "LGLR",
        "WR",
        "WLR",
        "LGM",
        "LGLM",
        "WM",
        "WLM",
        "LGBR",
        "LGY",
        "WBR",
        "WY",
        "LGLG",
        "LGW",
        "WLG",
        "WW",
};